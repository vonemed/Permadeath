//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class EnemyEntity {

    public Enemies.FreezeAllEnemiesComponent freezeAllEnemies { get { return (Enemies.FreezeAllEnemiesComponent)GetComponent(EnemyComponentsLookup.FreezeAllEnemies); } }
    public bool hasFreezeAllEnemies { get { return HasComponent(EnemyComponentsLookup.FreezeAllEnemies); } }

    public void AddFreezeAllEnemies(float newTimeToUnfreeze) {
        var index = EnemyComponentsLookup.FreezeAllEnemies;
        var component = (Enemies.FreezeAllEnemiesComponent)CreateComponent(index, typeof(Enemies.FreezeAllEnemiesComponent));
        component.timeToUnfreeze = newTimeToUnfreeze;
        AddComponent(index, component);
    }

    public void ReplaceFreezeAllEnemies(float newTimeToUnfreeze) {
        var index = EnemyComponentsLookup.FreezeAllEnemies;
        var component = (Enemies.FreezeAllEnemiesComponent)CreateComponent(index, typeof(Enemies.FreezeAllEnemiesComponent));
        component.timeToUnfreeze = newTimeToUnfreeze;
        ReplaceComponent(index, component);
    }

    public void RemoveFreezeAllEnemies() {
        RemoveComponent(EnemyComponentsLookup.FreezeAllEnemies);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class EnemyMatcher {

    static Entitas.IMatcher<EnemyEntity> _matcherFreezeAllEnemies;

    public static Entitas.IMatcher<EnemyEntity> FreezeAllEnemies {
        get {
            if (_matcherFreezeAllEnemies == null) {
                var matcher = (Entitas.Matcher<EnemyEntity>)Entitas.Matcher<EnemyEntity>.AllOf(EnemyComponentsLookup.FreezeAllEnemies);
                matcher.componentNames = EnemyComponentsLookup.componentNames;
                _matcherFreezeAllEnemies = matcher;
            }

            return _matcherFreezeAllEnemies;
        }
    }
}
