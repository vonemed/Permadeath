//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class PlayerEntity {

    public Player.XpComponent xp { get { return (Player.XpComponent)GetComponent(PlayerComponentsLookup.Xp); } }
    public bool hasXp { get { return HasComponent(PlayerComponentsLookup.Xp); } }

    public void AddXp(int newValue) {
        var index = PlayerComponentsLookup.Xp;
        var component = (Player.XpComponent)CreateComponent(index, typeof(Player.XpComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceXp(int newValue) {
        var index = PlayerComponentsLookup.Xp;
        var component = (Player.XpComponent)CreateComponent(index, typeof(Player.XpComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveXp() {
        RemoveComponent(PlayerComponentsLookup.Xp);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class PlayerMatcher {

    static Entitas.IMatcher<PlayerEntity> _matcherXp;

    public static Entitas.IMatcher<PlayerEntity> Xp {
        get {
            if (_matcherXp == null) {
                var matcher = (Entitas.Matcher<PlayerEntity>)Entitas.Matcher<PlayerEntity>.AllOf(PlayerComponentsLookup.Xp);
                matcher.componentNames = PlayerComponentsLookup.componentNames;
                _matcherXp = matcher;
            }

            return _matcherXp;
        }
    }
}
